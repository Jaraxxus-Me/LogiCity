entity:
  - Agents
  - Intersections

predicates:
  - IsAt:
      arity: 2
      method: utils.lnn_pred_converter.is_at
      description: Checks if x is at y.
  - IsIntersection:
      arity: 1
      method: utils.lnn_pred_converter.is_intersection
      description: Checks if x is an intersection.
#   - IsCar:
#       arity: 1
#       method: utils.lnn_pred_converter.is_car
#       description: Checks if the agent is a car.
  - IsPedestrian:
      arity: 1
      method: utils.lnn_pred_converter.is_pedestrian
      description: Checks if the agent is a pedestrian.
#   - IsInterEmpty:
#       arity: 1
#       method: utils.lnn_pred_converter.is_inter_empty
#       description: Checks if the intersection x is not empty.
  - IsInterCarEmpty:
      arity: 1
      method: utils.lnn_pred_converter.is_inter_carempty
      description: Checks if the intersection x is not empty with cars.
#   - HigherPri:
#       arity: 2
#       method: utils.lnn_pred_converter.previous_cars
#       description: Checks if exist car y, y has higher priority to x.
  - Stop:
      arity: 1
      method: None
      description: Stop action.
#   - Normal:
#       arity: 1
#       method: None
#       description: Normal action.

rules:
  - Pedestrian_Stop1:
      formula: Forall(x, Exists(y, Implies(And(IsPedestrian(x), IsIntersection(y), IsAt(x, y), Not(IsInterCarEmpty(y))), Stop(x))))
      description: pedestrians at intersection, not intersection empty with cars, stop
#   - Stop:
#       formula: Implies(Or(And(IsCar(x), IsAtIntersection(x), Not(And(IntersectionEmpty(x), IntersectionCarsEmpty(x)))), And(IsCar(x), IsAtIntersection(x), IntersectionEmpty(x), IntersectionCarsEmpty(x), PreviousCars(x)), And(IsPedestrian(x), IsAtIntersection(x), Not(IntersectionCarsEmpty(x)))), Stop(x))
#       description: Or version of the following stop rule.
#   - Normal:
#       formula: Implies(Or(Not(IsAtIntersection(x)), And(IntersectionCarsEmpty(x), Not(IsCar(x))), And(Not(IsCar(x)), Not(IsPedestrian(x))), And(IntersectionEmpty(x), IntersectionCarsEmpty(x), Not(PreviousCars(x)))), Normal(x))
#       description: If not stop, not bus, not (tiro, many pedestrains around), move normally.
#   - Cars_Stop1:
#       formula: Implies(And(IsCar(x), IsAtIntersection(x), Not(And(IntersectionEmpty(x), IntersectionCarsEmpty(x)))), Car_Stop1(x))
#       description: cars at intersection, not intersection empty, stop
#   - Cars_Stop2:
#       formula: Implies(And(IsCar(x), IsAtIntersection(x), IntersectionEmpty(x), IntersectionCarsEmpty(x), PreviousCars(x)), Car_Stop2(x))
#       description: cars at intersection, intersection empty, previous car, stop
#   - Pedestrians_Stop1:
#       formula: Forall(x, Exists(y, Implies(And(IsPedestrian(x), IsIntersection(y), IsAt(x, y), Not(IsInterCarEmpty(y))), Pedestrian_Stop1(x))))
#       description: pedestrians at intersection, not intersection empty with cars, stop
