# General simulation settings
simulation:
  map_yaml_file: "config/maps/square_5x5.yaml"       # OpenAI Gym environment name
  agent_yaml_file: "config/agents/hard/train.yaml" # Agents in the simulation
  ontology_yaml_file: "config/rules/ontology.yaml" # Ontology of the simulation
  rule_type: "Z3_RL"               # z3 rl will set the rl_agent with fixed number of other entities, return the groundings as obs, and return the rule reward
  rule_yaml_file: "config/rules/Nav/hard/rl.yaml"                    # Whether to render the environment
  rl: true
  debug: false
  use_multi: false
  agent_region: 100
  rl_agent: 
    max_priority: 13
    use_expert: false
    agent_name: "Car_1"               # ID of the RL agent, this is the agent id in the agent yaml file
    max_horizon: 200                          # Maximum steps in each episode 
    action_space: 4                       # Number of discrete actions, 4 means slow/normal/fast/stop
    action_mapping:                       # Mapping from policy action index to actual action space, see /agent folder
      0: [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      1: [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0]
      2: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0]
      3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    fov_entities:
      Entity: 5                        # Maximum number of entities in the FOV, include the RL agent
    action_cost:
      0: -2
      1: -1
      2: -2
      3: -3
    reset_dist:
      concepts: ['ambulance', 'bus', 'police', 'reckless', 'tiro', 'normal']
      prob: [0.18, 0.18, 0.18, 0.18, 0.18, 0.1]

eval_checkpoint:
  eval_freq: 1000                        # This is the frequency of evaluation, will be multiplied by num_envs
  save_freq: 1000
  simulation_config:
    map_yaml_file: "config/maps/square_5x5.yaml"       # OpenAI Gym environment name
    agent_yaml_file: "config/agents/hard/val.yaml" # Agents in the simulation
    ontology_yaml_file: "config/rules/ontology.yaml" # Ontology of the simulation
    rule_type: "Z3_RL"               # z3 rl will set the rl_agent with fixed number of other entities, return the groundings as obs, and return the rule reward
    rule_yaml_file: "config/rules/Nav/hard/rl.yaml"                    # Whether to render the environment
    rl: true
    debug: false
    use_multi: false
    agent_region: 100
    rl_agent: 
      max_priority: 13
      use_expert: false
      agent_name: "Car_1"               # ID of the RL agent, this is the agent id in the agent yaml file
      max_horizon: 400                          # Maximum steps in each episode 
      action_space: 4                       # Number of discrete actions, 4 means slow/normal/fast/stop
      action_mapping:                       # Mapping from policy action index to actual action space, see /agent folder
        0: [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        1: [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0]
        2: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0]
        3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
      fov_entities:
        Entity: 5                        # Maximum number of entities in the FOV, include the RL agent
      action_cost:
        0: -2
        1: -1
        2: -2
        3: -3
  save_path: './checkpoints/'
  name_prefix: 'med_bc200'
  episode_data: "dataset/hard/val_40_episodes.pkl"

# Stable Baselines specific settings
stable_baselines:
  algorithm: "BehavioralCloning"
  policy_network: "MlpPolicy"
  policy_kwargs:
    features_extractor_module: "logicity.rl_agent.policy.neural" # Module path
    features_extractor_class: "MLPFeatureExtractor"
    features_extractor_kwargs:
      features_dim: 64
  hyperparameters:
    num_traj: 200
    expert_demonstrations: "dataset/hard/train_1ktraj.pkl"
    optimizer: 
      type: "Adam"             # Optimizer to use
      args:
        lr: 0.0001          # Learning rate
    batch_size: 256                # Batch size for training
    tensorboard_log: "./tb_logs"  # Tensorboard log directory
    log_interval: 20
  train: true                   # Whether to train the model
  checkpoint_path: ""           # Path to a checkpoint to restore the model from
  num_envs: 1                   # Number of environments to run in parallel
  total_timesteps: 6000    # Total number of timesteps to run for all environments combined