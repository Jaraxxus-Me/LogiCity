# General simulation settings
simulation:
  map_yaml_file: "config/maps/square_5x5.yaml"       # OpenAI Gym environment name
  agent_yaml_file: "config/agents/easy_med/val.yaml" # Agents in the simulation
  ontology_yaml_file: "config/rules/ontology.yaml" # Ontology of the simulation
  rule_type: "Z3_RL"               # z3 rl will set the rl_agent with fixed number of other entities, return the groundings as obs, and return the rule reward
  rule_yaml_file: "config/rules/Nav/easy_med/test.yaml"                    # Whether to render the environment
  rl: true
  debug: false
  use_multi: false
  agent_region: 140
  rl_agent: 
    max_priority: 13
    use_expert: false
    agent_name: "Car_1"               # ID of the RL agent, this is the agent id in the agent yaml file
    max_horizon: 400                          # Maximum steps in each episode 
    action_space: 4                       # Number of discrete actions, 4 means slow/normal/fast/stop
    action_mapping:                       # Mapping from policy action index to actual action space, see /agent folder
      0: [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      1: [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0]
      2: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0]
      3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    fov_entities:
      Entity: 5                        # Maximum number of entities in the FOV, include the RL agent
    action_cost:
      0: -2
      1: 0
      2: -2
      3: -5

# Stable Baselines specific settings
stable_baselines:
  algorithm: "NLM"
  policy_network: "NLMPolicy"
  policy_kwargs:
    tgt_arity: 1
    nlm_args:
      input_dims: [0, 11, 6, 0] # the same as input_dims
      output_dims: 8 # the same as nlm_attributes
      logic_hidden_dim: []
      exclude_self: true
      depth: 4
      breadth: 3
      io_residual: false
      residual: false
      recursion: false
    target_dim: 2
  hyperparameters:
    index2action: {0: 'Normal', 1: 'Stop'}
    action2idx: {'Slow': 0, 'Normal': 1, 'Fast': 2, 'Stop': 3}
  train: false                   # Whether to train the model
  checkpoint_path: "nlm_easy_med_50"           # Path to a checkpoint to restore the model from
  num_envs: 1                   # Number of environments to run in parallel
  episode_data: "dataset/easy_med/val_40_episodes.pkl"
